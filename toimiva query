import { ApolloProvider } from '@apollo/react-hooks';
import React from 'react';
import './index.css';
import * as serviceWorker from './serviceWorker';
import ApolloClient from 'apollo-boost';
import { gql } from "apollo-boost";
import { render } from 'react-dom';
import { useQuery } from '@apollo/react-hooks';

const client = new ApolloClient({
    uri: 'https://api.digitransit.fi/routing/v1/routers/hsl/index/graphql',
});



const EXCHANGE_RATES = gql`
  {
  alerts {
    alertDescriptionText
  }
}
`;

function ExchangeRates() {
    const { loading, error, data } = useQuery(EXCHANGE_RATES);

    if (loading) return <p>Loading...</p>;
    if (error) return <p>Error :(</p>;

    return data.alerts.map(({alertDescriptionText}) => (
        <div key={alertDescriptionText}>
            <p>
              {alertDescriptionText}
             </p>
        </div>
    ));
}

const App = () => (
    <ApolloProvider client={client}>
        <div>
            <h2>My first Apollo app ðŸš€</h2>
            <ExchangeRates />
        </div>   
    </ApolloProvider>
);


render(<App />, document.getElementById('root'));
// If you want your app to work offline and load faster, you can change
// unregister() to register() below. Note this comes with some pitfalls.
// Learn more about service workers: https://bit.ly/CRA-PWA
serviceWorker.unregister();
